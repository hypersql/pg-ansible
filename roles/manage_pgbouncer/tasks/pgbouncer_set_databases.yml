---
- name: Check pgbouncer_databases_list validation
  fail:
    msg: "pgbouncer_databases_list.dbname is not defined."
  with_items: "{{ pgbouncer_databases_list }}"
  loop_control:
    loop_var: user_item
  when:
    - pgbouncer_databases_list|length > 0
    - user_item.state is not defined or user_item.state == 'present'
    - user_item.dbname is not defined or user_item.dbname|length < 1

- name: Manage PgBouncer databases entries in {{ pgbouncer_databases_file }}
  lineinfile:
    path: "{{ pgbouncer_databases_file }}"
    line: >-
      {{ db_item.dbname }} = {% if db_item.host is defined %}host={{ db_item.host }}{% endif %}
      {% if db_item.port is defined %}port={{ db_item.port }}{% else %}port={{ pg_port }}{% endif %}
      {% if db_item.pool_size is defined %}pool_size={{ db_item.pool_size }}{% endif %}
      {% if db_item.pool_mode is defined %}pool_mode={{ db_item.pool_mode }}{% endif %}
      {% if db_item.max_db_connections is defined %}max_db_connections={{ db_item.max_db_connections }}{% endif %}
      {% if db_item.reserve_pool is defined %}reserve_pool={{ db_item.reserve_pool }}{% endif %}
    regexp: "^{{ db_item.dbname | regex_escape() }}\\ = "
    state: "{{ db_item.state | default('present') }}"
  when: pgbouncer_databases_list|length > 0
  with_items: "{{ pgbouncer_databases_list }}"
  loop_control:
    loop_var: db_item
  become: true

- name: Reload PgBouncer configuration
  shell:
    cmd: kill -HUP $(cat {{ pgbouncer_pid_file }})
  changed_when: false
  become: true
